LMK04828
0x00 0x80  // Reset
0x02 0x00  // No Powerdown
// DCLK0, SDCLK1
0x100 0x79 // Divide by 25 (2.5GHz ->100M, ODL/IDL = 0)
0x101 0x55 // Default value DDLY_CNTH/DDLY_CNTL
0x103 0x01 // Default, bypass analog/digital delay
0x104 0x00 // Selects SDCLK == DCLK, bypass halfstep & SDCLK_DDLY
0x105 0x00 // By pass analog delay for SDCLK
0x106 0xF0 // Power down digital/analog delay & halfstep
0x107 0x11 // DCLK0 -> LVDS, SDCLK1->LVDS,
// DCLK2, SDCLK3
0x108 0x74  // Divide by 20 (2.5GHz -> 125 MHz)
0x109 0x55
0x10B 0x01
0x10C 0x00 // Selects SDCLK = DCLK
0x10D 0x00
0x10E 0xF0
0x10F 0x11  // DCLK2 -> LVDS, SDCLK3 -> LVDS
// DCLK4, SDCLK5
0x110 0x6A // Divide by 25 (2.5GHz -> 100MHz, ODL/IDL = 0)
0x111 0x55
0x113 0x01
0x114 0x00 // SDCLK == DCLK
0x115 0x00
0x116 0xF0
0x117 0x11 // DCLK4 -> LVDS, SDCLK5 -> LVDS
// DCLK6, SDCLK7
0x118 0x68 // Divide by 25 (2.5GHz ->100MHz), ODL/IDL = 0
0x119 0x55
0x11B 0x01
0x11C 0x00 // Selects SDCLK = DLCK
0x11D 0x00
0x11E 0xF1 // Power down everything (not currently using DCLK6 & SDCLK7)
0x11F 0x11 // DCLK2 -> OFF, SDCLK3 -> OFF
// DCLK8, SDCLK9
0x120 0x79 // Divide by 25 (2.5GHz ->100M, ODL/IDL = 0)
0x121 0x55 // Default value DDLY_CNTH/DDLY_CNTL
0x123 0x01 // Default, bypass analog/digital delay
0x124 0x00 // Selects SDCLK == DCLK, bypass halfstep & SDCLK_DDLY
0x125 0x00 // By pass analog delay for SDCLK
0x126 0xF0 // Power down digital/analog delay & halfstep
0x127 0x11 // DCLK -> LVDS, SDCLK->LVDS,
// DCLK10, SDCLK11
0x128 0x79 // Divide by 25 (2.5GHz ->100M, ODL/IDL = 0)
0x129 0x55 // Default value DDLY_CNTH/DDLY_CNTL
0x12B 0x01 // Default, bypass analog/digital delay
0x12C 0x00 // Selects SDCLK == DCLK, bypass halfstep & SDCLK_DDLY
0x12D 0x00 // By pass analog delay for SDCLK
0x12E 0xF0 // Power down digital/analog delay & halfstep
0x12F 0x11 // DCLK -> LVDS, SDCLK->LVDS,
// DCLK12, SDCLK12
0x130 0x79 // Divide by 25 (2.5GHz ->100M, ODL/IDL = 0)
0x131 0x55 // Default value DDLY_CNTH/DDLY_CNTL
0x133 0x01 // Default, bypass analog/digital delay
0x134 0x00 // Selects SDCLK == DCLK, bypass halfstep & SDCLK_DDLY
0x135 0x00 // By pass analog delay for SDCLK
0x136 0xF0 // Power down digital/analog delay & halfstep
0x137 0x11 // DCLK -> LVDS, SDCLK->LVDS,
0x138 0x00 // Use VCO0 (2.5GHz) and powerdown OSCout
0x139 0x03 // SYSREF continuous (shouldn't matter, not used)
0x13A 0x03 // SYSREF_DIV[12:8] (shouldn't matter, not used)
0x13B 0x00 // SYSREF_DIV[7:0] (shouldn't matter, not used)
0x13C 0x00 // SYSREF DDLY[12:8]
0x13D 0x08 // SYSREF_DDLY[7:0]
0x13E 0x03 // SYSREF_PULSE_CNT
0x13F 0x00 // PLL2 Mux = PLL prescaler
0x140 0x07 // 0x01 = SYSRef Powerdown (note...could power down more elements here)
0x141 0x00 // Disables DDLY for SYSREF & DCLK outputs
0x142 0x00 // No digital dynam delays or whatever
0x143 0x00 // SYSREF stuff (not used)
0x144 0xFF // SYNC dissable
0x145 0x7F // Must program to 127
0x146 0x18 // CLKin0/1/2 = Bipolar, CLK1 & 0 are auto-switchable
0x147 0x0A // CLKin0 & CLKin1 -> PLL1, CLKin_SEL_MODE = CLKin0
0x148 0x13 // CLKin_SEL0 USE = LED, Ouput (push-pull) CLKin0_selected
0x149 0x73 // CLKin_SEL1 = SPI readback
0x14A 0x00 // Reset pin = Input
0x14B 0x12 // Manual DAC (this one confuses me tbh)
0x14C 0x00 // Manual DAC (this one confuses me tbh)
0x14D 0x00 // DAC_TRIP_LOW (this one confuses me tbh)
0x14E 0x00 // DAC_TRIP_MULT/DAC_TRIP_HIGH (this one confuses me tbh)
0x14F 0x7F // DAC counter this is a status/readback register
0x150 0x03
0x151 0x02
0x152 0x00
0x153 0x00 // CLKIN0 Divider[13:8] 50MHz / 5 = 10MHz
0x154 0x05 // CLKIN0 Divider[7:0] 50MHz / 5 = 10MHz
0x155 0x00 // CLKIN1 Divider[13:8] 50MHz / 5 = 10MHz
0x156 0x05 // CLKIN1 Divider[7:0] 50MHz / 5 = 10MHz
0x157 0x00 // CLKIN2 Divider[13:8] (not used doesn't matter)
0x158 0x96 // CLKIN2 Divider[7:0] (not used doesn't matter)
0x159 0x00 // PLL1 Divider [13:8]  100 MHz / 10 = 10MHz
0x15A 0x0A // PLL1 Divider [7:0] 100 MHz / 10 = 10MHz
0x15B 0xD4 // Charge pump values
0x15C 0x20 // DLD CNT status register
0x15D 0x00 // DLD CNT status register
0x15E 0x00 // PLL1 delay values (no delay)
0x15F 0x0B // Status_LD1(LED) = PLL1 locked
0x160 0x00 // PLL2_R[11:8] Dont divide (Div = 1)
0x161 0x01 // PLL2_R[7:0] Dont divide (Div = 1)
0x162 0xA4 // PLL2 VCO Prescaler (bits 7:5) = 5 (2.5G/5 = 500M) and expected freq at PLL is 100M (between 63 & 127M)
0x163 0x00 // PLL2_N_CAL (not sure what this means tbh)
0x164 0x00 // PLL2_N_CAL (not sure what this means tbh)
0x165 0x0C // PLL2_N_CAL (not sure what this means tbh)
0x166 0x00 // PLL2_N Divider[17:16]
0x167 0x00 // PLL2_N Divider[15:8]
0x168 0x05 // PLL2_N Divider[7:0] (divide by 5 b/c 500M / 5 = 100M)
0x169 0x59 // PLL CP valuesA 0x2
0x16A 0x20 // PLL2_DLD_CNT[13:8]
0x16B 0x00 // PLL2_DLD_CNT[7:0]
0x16C 0x00 // Integrated loop filter RC values
0x16D 0x00 // Integrated loop filter RC values
0x16E 0x13 // Integrated loop filter RC values
